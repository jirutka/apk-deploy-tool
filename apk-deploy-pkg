#!/bin/ash
# vim: set ts=4 ft=sh:
#---help---
# Usage: apk-deploy-pkg [options]
#
# Read APK package from STDIN, install it and restart its service, if any.
#
# Options:
#   -f --overwrite-configs  Overwrite any local changes in /etc files
#                           provided by the installed package.
#   -h --help               Show this message and exit.
#
# Homepage: <https://github.com/jirutka/apk-deploy-tool>
#---help---
set -eu -o pipefail

if [ $(id -u) -ne 0 ]; then
	exec sudo -u root -- "$0" "$@"
fi

DEPLOY_HOME=$(getent passwd "$SUDO_USER" | cut -d: -f6)
PKGS_DIR="$DEPLOY_HOME/packages"
PROGNAME='apk-deploy-pkg'

log() {
	local level=$1
	local msg=$2
	local prefix=''

	case "$level" in
		error) echo "ERROR: $msg" >&2;;
		*) printf '%s\n' "$msg";;
	esac
	logger -t "$PROGNAME" -p "local0.$level" "$msg"
}

die() {
	log error "$2"
	exit "$1"
}

help() {
	sed -n '/^#---help---/,/^#---help---/p' "$0" | sed 's/^# \?//; 1d;$d;'
}

pkginfo_get() {
	local field=$1 apkfile=$2
	tar -Oxzf "$apkfile" .PKGINFO | sed -En "s/^$field = (.*)/\1/p"
}

pkg_svcname() {
	local pkgname=$1
	apk info -Lq "$pkgname" | grep -m 1 '^etc/init\.d/' | grep -o '[^/]\+$'
}

check_configs() {
	local pkgname=$1
	local overwrite="$2"

	apk info -Lq "$pkgname" | grep '^etc/' | while read path; do
		path="/$path"
		[ -f "$path.apk-new" ] || continue

		diff -u "$path" "$path.apk-new" || true
		[ "$overwrite" = no ] || mv "$path.apk-new" "$path"
	done
}

overwrite=no
case "${1:-}" in
	-f | --overwrite-configs) overwrite=yes;;
	-h | --help) help; exit 0;;
esac

tmpdir=$(mktemp -d)
pkgfile="$tmpdir/pkg.apk"
trap "rm -Rf '$tmpdir'" EXIT HUP INT TERM

echo 'Reading apk package from stdin...'
cat > "$pkgfile"
mkdir -p "$PKGS_DIR"

pkgname=$(pkginfo_get pkgname "$pkgfile")
pkgver=$(pkginfo_get pkgver "$pkgfile")
pkgfile_old=$(find "$PKGS_DIR" -name "$pkgname~*.apk" | sort | tail -n 1)
pkgfile="$PKGS_DIR/$pkgname~$(date +%s).apk"

mv "$tmpdir/pkg.apk" "$pkgfile"

log info "Installing $pkgname-$pkgver..."
apk add --no-progress "$pkgfile" || {
	[ "$pkgfile_old" ] || die 3 'Installation failed and no previous version for rollback exists!'

	log error 'Installation failed, rolling back to the previous version...'
	apk add --no-progress "$pkgfile_old" || die 3 'Rollback failed'
	exit 4
}

check_configs "$pkgname" "$overwrite"

if svcname=$(pkg_svcname "$pkgname"); then
	rc-service $svcname restart || {
		[ "$pkgfile_old" ] || die 3 'Installation failed and no previous version for rollback exists!'

		log error "Service $svcname failed, rolling back to the previous version..."
		apk add --no-progress "$pkgfile_old" || die 3 'Rollback failed'
		rc-service $svcname restart || die 3 'Rollback failed'
		exit 4
	}
fi

# Delete old versions of the package.
find "$PKGS_DIR" -name "$pkgname~*.apk" -a ! -name "${pkgfile##*/}" -delete
